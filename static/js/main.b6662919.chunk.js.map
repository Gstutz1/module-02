{"version":3,"sources":["components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Medal","state","this","props","medal","country","onIncrement","onDecrement","className","name","onClick","id","disabled","Component","Country","medals","onDelete","sum","forEach","getMedalsTotal","map","NewCountry","handleClick","prompt","trim","length","onAdd","App","apiEndpoint","useState","countries","setCountries","useRef","useEffect","a","axios","get","fetchedCountries","data","fetchCountries","handleAdd","post","concat","handleDelete","countryId","originalCountries","filter","c","delete","response","status","console","log","alert","handleIncrement","medalName","idx","findIndex","mutableCountries","handleDecrement","Fragment","current","reduce","b","getAllMedalsTotal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6662919.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Medal extends Component {\r\n  state = {  }\r\n  render() { \r\n    const { medal, country, onIncrement, onDecrement } = this.props;\r\n    return (\r\n      <div className=\"medals\">\r\n        { medal.name } Medals: { country[medal.name] }\r\n        <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\r\n        <button disabled={ country[medal.name] === 0 } onClick={ () => onDecrement(country.id, medal.name) }>-</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Medal;","import React from 'react';\r\nimport Medal from './Medal';\r\n\r\nconst Country = (props) => {\r\n  const { country, medals, onIncrement, onDecrement, onDelete } = props;\r\n\r\n  const getMedalsTotal = (country, medals) => {\r\n    let sum = 0;\r\n    medals.forEach(medal => { sum += country[medal.name]; });\r\n    return sum;\r\n  }\r\n  return (\r\n    <div className=\"country\">\r\n      <div className=\"name\">\r\n        { country.name }\r\n        <span className=\"badge\">\r\n          { getMedalsTotal(country, medals) }\r\n        </span>\r\n      </div>\r\n      { medals.map(medal =>\r\n        <Medal \r\n          key={ medal.id } \r\n          country={ country } \r\n          medal={ medal } \r\n          onIncrement={ onIncrement } \r\n          onDecrement={ onDecrement } />\r\n      ) }\r\n      <button onClick={() => onDelete(country.id)}>delete</button>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;","import React, { Component } from 'react';\r\n\r\nclass NewCountry extends Component {\r\n  state = {  }\r\n  handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name && name.trim().length > 0) {\r\n      this.props.onAdd(name);\r\n    }\r\n  }\r\n  render() { \r\n    return (\r\n      <div className='newCountryButton'>\r\n        <button onClick={ this.handleClick }>New Country</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCountry;","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios'\nimport Country from './components/Country';\nimport NewCountry from './components/NewCountry';\nimport './App.css';\n\nconst App = () => {\n  const apiEndpoint = 'https://localhost:44373/Api/country'\n  const [ countries, setCountries ] = useState([]);\n  const medals = useRef([\n    { id: 1, name: 'gold' },\n    { id: 2, name: 'silver' },\n    { id: 3, name: 'bronze' },\n  ]);\n\n  useEffect(() => {\n    async function fetchCountries() {\n      const {data : fetchedCountries} = await axios.get(apiEndpoint);\n      setCountries(fetchedCountries);\n    }\n    fetchCountries();\n  }, []);\n\n  const handleAdd = async (name) => {\n    const { data: post } = await axios.post(apiEndpoint, { name: name });\n    setCountries(countries.concat(post));\n  }\n\n  const handleDelete = async (countryId) => {\n    const originalCountries = countries;\n    setCountries(countries.filter(c => c.id !== countryId));\n    try {\n      await axios.delete(`${apiEndpoint}/${countryId}`);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        console.log(\"The record does not exist - it may have already been deleted\");\n      } else { \n        alert('An error occurred while deleting');\n        setCountries(originalCountries);\n      }\n    }\n  }\n\n  const handleIncrement = (countryId, medalName) => {\n    const idx = countries.findIndex(c => c.id === countryId);\n    const mutableCountries = [...countries ];\n    mutableCountries[idx][medalName] += 1;\n    setCountries(mutableCountries);\n  }\n\n  const handleDecrement = (countryId, medalName) => {\n    const idx = countries.findIndex(c => c.id === countryId);\n    const mutableCountries = [...countries ];\n    mutableCountries[idx][medalName] -= 1;\n    setCountries(mutableCountries);\n  }\n  \n  const getAllMedalsTotal = () => {\n    let sum = 0;\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name], 0); });\n    return sum;\n  }\n  return (\n    <React.Fragment>\n      <div className='appHeading'>\n        Olympic Medals\n        <span className='badge'>\n          { getAllMedalsTotal() }\n        </span>\n      </div>\n      <div className='countries'>\n          { countries.map(country => \n            <Country \n              key={ country.id } \n              country={ country } \n              medals={ medals.current }\n              onDelete={ handleDelete }\n              onIncrement={ handleIncrement } \n              onDecrement={ handleDecrement } />\n          )}\n      </div>\n      <NewCountry onAdd={ handleAdd } />\n    </React.Fragment>\n  );\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}