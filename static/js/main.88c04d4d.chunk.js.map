{"version":3,"sources":["components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["NewCountry","props","onAdd","className","onClick","name","prompt","trim","length","state","handleClick","this","Component","App","apiEndpoint","useState","countries","setCountries","medals","useRef","id","useEffect","a","axios","get","fetchedCountries","data","fetchCountries","handleAdd","post","concat","handleDelete","countryId","originalCountries","filter","c","delete","response","status","console","log","alert","handleIncrement","medalName","idx","findIndex","mutableCountries","handleDecrement","Fragment","sum","current","forEach","medal","reduce","b","getAllMedalsTotal","map","country","Country","onDelete","onIncrement","onDecrement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88c04d4d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NewCountry = (props) => {\r\n  const {onAdd} = props;\r\n  const handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name && name.trim().length > 0) {\r\n      onAdd(name);\r\n    }\r\n  }\r\n  return (\r\n    <div className='newCountryButton'>\r\n      <button onClick={handleClick}>New Country</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCountry;","import React, { Component } from 'react';\r\n\r\nclass NewCountry extends Component {\r\n  state = {  }\r\n  handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name && name.trim().length > 0) {\r\n      this.props.onAdd(name);\r\n    }\r\n  }\r\n  render() { \r\n    return (\r\n      <div className='newCountryButton'>\r\n        <button onClick={ this.handleClick }>New Country</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCountry;","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios'\nimport Country from './components/Country';\nimport NewCountry from './components/NewCountry';\nimport './App.css';\n\nconst App = () => {\n  const apiEndpoint = 'https://medal-api.azurewebsites.net/Api/country'\n  const [ countries, setCountries ] = useState([]);\n  const medals = useRef([\n    { id: 1, name: 'gold' },\n    { id: 2, name: 'silver' },\n    { id: 3, name: 'bronze' },\n  ]);\n\n  useEffect(() => {\n    async function fetchCountries() {\n      const {data : fetchedCountries} = await axios.get(apiEndpoint);\n      setCountries(fetchedCountries);\n    }\n    fetchCountries();\n  }, []);\n\n  const handleAdd = async (name) => {\n    const { data: post } = await axios.post(apiEndpoint, { name: name });\n    setCountries(countries.concat(post));\n  }\n\n  const handleDelete = async (countryId) => {\n    const originalCountries = countries;\n    setCountries(countries.filter(c => c.id !== countryId));\n    try {\n      await axios.delete(`${apiEndpoint}/${countryId}`);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        console.log(\"The record does not exist - it may have already been deleted\");\n      } else { \n        alert('An error occurred while deleting');\n        setCountries(originalCountries);\n      }\n    }\n  }\n\n  const handleIncrement = (countryId, medalName) => {\n    const idx = countries.findIndex(c => c.id === countryId);\n    const mutableCountries = [...countries ];\n    mutableCountries[idx][medalName] += 1;\n    setCountries(mutableCountries);\n  }\n\n  const handleDecrement = (countryId, medalName) => {\n    const idx = countries.findIndex(c => c.id === countryId);\n    const mutableCountries = [...countries ];\n    mutableCountries[idx][medalName] -= 1;\n    setCountries(mutableCountries);\n  }\n  \n  const getAllMedalsTotal = () => {\n    let sum = 0;\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name], 0); });\n    return sum;\n  }\n  return (\n    <React.Fragment>\n      <div className='appHeading'>\n        Olympic Medals\n        <span className='badge'>\n          { getAllMedalsTotal() }\n        </span>\n      </div>\n      <div className='countries'>\n          { countries.map(country => \n            <Country \n              key={ country.id } \n              country={ country } \n              medals={ medals.current }\n              onDelete={ handleDelete }\n              onIncrement={ handleIncrement } \n              onDecrement={ handleDecrement } />\n          )}\n      </div>\n      <NewCountry onAdd={ handleAdd } />\n    </React.Fragment>\n  );\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}