{"version":3,"sources":["components/Login.jsx","components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","props","onLogin","useState","username","setUsername","password","setPassword","history","useHistory","className","onSubmit","e","preventDefault","console","log","push","handleSubmit","htmlFor","onChange","target","value","autoFocus","type","name","id","placeholder","disabled","length","onClick","Medal","medal","country","onIncrement","onDecrement","canPatch","page_value","saved_value","Fragment","Country","medals","onDelete","onSave","onReset","canDelete","sum","forEach","getMedalsTotal","map","unsaved","renderSaveButton","style","marginLeft","NewCountry","state","handleClick","prompt","trim","onAdd","this","Component","App","apiEndpoint","countries","setCountries","connection","setConnection","useRef","canPost","user","setUser","latestCountries","current","useEffect","a","axios","get","fetchedCountries","data","newCountries","newCountry","count","fetchCountries","encodedJwt","localStorage","getItem","getUser","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","on","mutableCountries","concat","filter","c","updatedCountry","idx","findIndex","catch","handleAdd","isValidToken","post","headers","response","status","alert","handleDelete","countryId","originalCountries","delete","handleSave","originalCounts","jsonPatch","op","path","JSON","stringify","patch","handleReset","handleIncrement","medalName","handleUpdate","handleDecrement","factor","handleLogin","resp","token","setItem","handleLogout","removeItem","decodedJwt","jwtDecode","diff","Date","now","parseInt","indexOf","reduce","b","getAllMedalsTotal","href","to","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbafcd48.chunk.js","sourcesContent":["import React, {useState}  from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const { onLogin } = props;\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Submit');\r\n    onLogin(username, password);\r\n    history.push(\"/\");\r\n  }\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <form className='loginForm' onSubmit={(e) => handleSubmit(e)}>\r\n      <p>\r\n        <label htmlFor=\"username\">Username: </label>\r\n        <input onChange={ (e) => setUsername(e.target.value) } value={username} autoFocus type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" />\r\n      </p>\r\n      <p>\r\n        <label htmlFor=\"password\">Password: </label>\r\n        <input onChange={ (e) => setPassword(e.target.value) } value={password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n      </p>\r\n      <p>\r\n        <button disabled={username.length === 0 || password.length === 0} type=\"submit\">Submit</button> <button onClick={handleCancel} type=\"button\">Cancel</button>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Medal = (props) => {\r\n  const { medal, country, onIncrement, onDecrement, canPatch } = props;\r\n  \r\n  return (\r\n    <div className=\"medals\">\r\n      { \r\n        ( country[medal.name].page_value !== country[medal.name].saved_value) ?\r\n          <span className=\"delta\">{medal.name} Medals: {country[medal.name].page_value}</span>\r\n        :\r\n          <span>{medal.name} Medals: {country[medal.name].page_value}</span>\r\n      }\r\n      { canPatch && \r\n        <React.Fragment>\r\n          <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\r\n          <button disabled={ country[medal.name] === 0 } onClick={ () => onDecrement(country.id, medal.name) }>-</button>\r\n        </React.Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medal;","import React from 'react';\r\nimport Medal from './Medal';\r\n\r\nconst Country = (props) => {\r\n  const { country, medals, onIncrement, onDecrement, onDelete, onSave, onReset, canDelete, canPatch } = props;\r\n\r\n  const getMedalsTotal = (country, medals) => {\r\n    let sum = 0;\r\n    medals.forEach(medal => { sum += country[medal.name].page_value; });\r\n    return sum;\r\n  }\r\n\r\n  const renderSaveButton = () => {\r\n    let unsaved = false;\r\n    medals.forEach(medal => {\r\n      if (country[medal.name].page_value !== country[medal.name].saved_value) {\r\n        unsaved = true;\r\n      }\r\n    });\r\n    return unsaved;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"country\">\r\n      <div className=\"name\">\r\n        { country.name }\r\n        <span className=\"badge\">\r\n          { getMedalsTotal(country, medals) }\r\n        </span>\r\n      </div>\r\n      { medals.map(medal =>\r\n        <Medal \r\n          key={ medal.id } \r\n          country={ country } \r\n          medal={ medal } \r\n          canPatch={ canPatch }\r\n          onIncrement={ onIncrement } \r\n          onDecrement={ onDecrement } />\r\n      ) }\r\n      { renderSaveButton() ?\r\n        <React.Fragment>\r\n          <button style={{marginLeft:'8px'}} onClick={ () => onSave(country.id) }>save</button>\r\n          <button style={{marginLeft:'8px'}} onClick={ () => onReset(country.id) }>reset</button>\r\n        </React.Fragment>\r\n        :\r\n        canDelete && <button onClick={() => onDelete(country.id)}>delete</button>\r\n      }\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;","import React, { Component } from 'react';\r\n\r\nclass NewCountry extends Component {\r\n  state = {  }\r\n  handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name && name.trim().length > 0) {\r\n      this.props.onAdd(name);\r\n    }\r\n  }\r\n  render() { \r\n    return (\r\n      <div className='newCountryButton'>\r\n        <button onClick={ this.handleClick }>New Country</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCountry;","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport jwtDecode from 'jwt-decode';\nimport Login from './components/Login';\nimport Country from './components/Country';\nimport NewCountry from './components/NewCountry';\nimport './App.css';\n\nconst App = () => {\n  const apiEndpoint = 'https://medal-api.azurewebsites.net/jwt/Api/country';\n  const hubEndpoint = 'https://medal-api.azurewebsites.net/medalsHub';\n  const usersEndpoint = \"https://medal-api.azurewebsites.net/Api/users/login\";\n  const [ countries, setCountries ] = useState([]);\n  const [ connection, setConnection] = useState(null);\n  const medals = useRef([\n    { id: 1, name: 'gold' },\n    { id: 2, name: 'silver' },\n    { id: 3, name: 'bronze' },\n  ]);\n  const [ user, setUser ] = useState(\n    {\n      name: null,\n      canPost: false,\n      canPatch: false,\n      canDelete: false\n    }\n  );\n  const latestCountries = useRef(null);\n  latestCountries.current = countries;\n\n  useEffect(() => {\n    async function fetchCountries() {\n      const { data : fetchedCountries } = await axios.get(apiEndpoint);\n      let newCountries = [];\n      fetchedCountries.forEach(country => {\n        let newCountry = {\n          id: country.id,\n          name: country.name,\n        };\n        medals.current.forEach(medal => {\n          const count = country[medal.name];\n          newCountry[medal.name] = { page_value: count, saved_value: count };\n        });\n        newCountries.push(newCountry);\n      });\n      setCountries(newCountries);\n    }\n    fetchCountries();\n\n    const encodedJwt = localStorage.getItem(\"token\");\n    if (encodedJwt) {\n      setUser(getUser(encodedJwt));\n    }\n\n    const newConnection = new HubConnectionBuilder()\n      .withUrl(hubEndpoint)\n      .withAutomaticReconnect()\n      .build();\n\n    setConnection(newConnection);\n  }, []);\n\n  useEffect(() => {\n    if (connection) {\n      connection.start()\n      .then(() => {\n        console.log('Connected!')\n\n        connection.on('ReceiveAddMessage', country => {\n          console.log(`Add: ${country.name}`);\n\n          let newCountry = { \n            id: country.id, \n            name: country.name,\n          };\n          medals.current.forEach(medal => {\n            const count = country[medal.name];\n            newCountry[medal.name] = { page_value: count, saved_value: count };\n          });\n          let mutableCountries = [...latestCountries.current];\n          mutableCountries = mutableCountries.concat(newCountry);\n          setCountries(mutableCountries);\n        });\n\n        connection.on('ReceiveDeleteMessage', id => {\n          console.log(`Delete id: ${id}`);\n          let mutableCountries = [...latestCountries.current];\n          mutableCountries = mutableCountries.filter(c => c.id !== id);\n          setCountries(mutableCountries);\n        });\n\n        connection.on('ReceivePatchMessage', country => {\n          console.log(`Patch: ${country.name}`);\n          let updatedCountry = {\n            id: country.id,\n            name: country.name,\n          }\n          medals.current.forEach(medal => {\n            const count = country[medal.name];\n            updatedCountry[medal.name] = { page_value: count, saved_value: count };\n          });\n          let mutableCountries = [...latestCountries.current];\n          const idx = mutableCountries.findIndex(c => c.id === country.id);\n          mutableCountries[idx] = updatedCountry;\n\n          setCountries(mutableCountries);\n        });\n      })\n      .catch(e => console.log('Connection failed: ', e));\n    }\n  }, [connection]);\n\n  const handleAdd = async (name) => {\n    if (isValidToken())\n    {\n      try {\n        await axios.post(apiEndpoint, {\n          name: name\n        }, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } catch (ex) {\n        if (ex.response && ex.response.status === 401) {\n          alert(\"You are not authorized to complete this request\");\n        } else if (ex.response) {\n          console.log(ex.response);\n        } else {\n          console.log(\"Request failed\");\n        }\n      }\n    } else {\n      alert('Your token has expired');\n    }\n  }\n\n  const handleDelete = async (countryId) => {\n    if (isValidToken())\n    {\n      const originalCountries = countries;\n      setCountries(countries.filter(c => c.id !== countryId));\n      try {\n        await axios.delete(`${apiEndpoint}/${countryId}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) {\n          // country already deleted\n          console.log(\"The record does not exist - it may have already been deleted\");\n        } else { \n          setCountries(originalCountries);\n          if (ex.response && ex.response.status === 401) {\n            alert(\"You are not authorized to complete this request\");\n          } else if (ex.response) {\n            console.log(ex.response);\n          } else {\n            console.log(\"Request failed\");\n          }\n        }\n      }\n    } else {\n      alert('Your token has expired');\n    }\n  }\n\n  const handleSave = async (countryId) => {\n    const originalCounts = {};\n\n    const idx = countries.findIndex(c => c.id === countryId);\n    const mutableCountries = [ ...countries ];\n    const country = mutableCountries[idx];\n    let jsonPatch = [];\n    medals.current.forEach(medal => {\n      originalCounts[medal.name] = country[medal.name].saved_value;\n      if (country[medal.name].page_value !== country[medal.name].saved_value) {\n        jsonPatch.push({ op: \"replace\", path: medal.name, value: country[medal.name].page_value });\n        country[medal.name].saved_value = country[medal.name].page_value;\n      }\n    });\n    console.log(`json patch for id: ${countryId}: ${JSON.stringify(jsonPatch)}`);\n    if (isValidToken())\n    {\n      try {\n        await axios.patch(`${apiEndpoint}/${countryId}`, jsonPatch, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } catch (ex) {\n        medals.current.forEach(medal => {\n          country[medal.name].page_value = originalCounts[medal.name];\n          country[medal.name].saved_value = originalCounts[medal.name];\n        });     \n        if (ex.response && ex.response.status === 404) {\n          console.log(\"The record does not exist - it may have been deleted\");\n        } else if (ex.response && ex.response.status === 401) { \n          alert('You are not authorized to complete this request');\n        } else if (ex.response) {\n          console.log(ex.response);\n        } else {\n          console.log(\"Request failed\");\n        }\n      }\n    } else {\n      medals.current.forEach(medal => {\n        country[medal.name].page_value = originalCounts[medal.name];\n        country[medal.name].saved_value = originalCounts[medal.name];\n      });  \n      alert('Your token has expired');\n    }\n    setCountries(mutableCountries);\n  }\n\n  const handleReset = (countryId) => {\n    const idx = countries.findIndex(c => c.id === countryId);\n    const mutableCountries = [ ...countries ];\n    const country = mutableCountries[idx];\n    medals.current.forEach(medal => {\n      country[medal.name].page_value = country[medal.name].saved_value;\n    });\n    setCountries(mutableCountries);\n  }\n  const handleIncrement = (countryId, medalName) => handleUpdate(countryId, medalName, 1);\n  const handleDecrement = (countryId, medalName) => handleUpdate(countryId, medalName, -1);\n\n  const handleUpdate = (countryId, medalName, factor) => {\n    const idx = countries.findIndex(c => c.id === countryId);\n    const mutableCountries = [...countries ];\n    mutableCountries[idx][medalName].page_value += (1 * factor);\n    setCountries(mutableCountries);\n  }\n\n  const handleLogin = async (username, password) => {\n    try {\n      const resp = await axios.post(usersEndpoint, { username: username, password: password });\n      const encodedJwt = resp.data.token;\n      localStorage.setItem('token', encodedJwt);\n      setUser(getUser(encodedJwt));\n    } catch (ex) {\n      if (ex.response && (ex.response.status === 401 || ex.response.status === 400 )) {\n        alert(\"Login failed\");\n      } else if (ex.response) {\n        console.log(ex.response);\n      } else {\n        console.log(\"Request failed\");\n      }\n    }\n  }\n\n  const handleLogout = (e) => {\n    e && e.preventDefault();\n    console.log('logout');\n    localStorage.removeItem('token');\n    setUser({\n      name: null,\n      canPost: false,\n      canPatch: false,\n      canDelete: false\n    });\n    return false;\n  }\n\n  const getUser = (encodedJwt) => {\n    const decodedJwt = jwtDecode(encodedJwt);\n    const diff = Date.now() - (decodedJwt['exp'] * 1000);\n    if (diff < 0) {\n      console.log(`token expires in ${parseInt((diff * -1) / 60000)} minutes`);\n      return {\n        name: decodedJwt['username'],\n        canPost: decodedJwt['roles'].indexOf('medals-post') === -1 ? false : true,\n        canPatch: decodedJwt['roles'].indexOf('medals-patch') === -1 ? false : true,\n        canDelete: decodedJwt['roles'].indexOf('medals-delete') === -1 ? false : true,\n      };\n    }\n    console.log(`token expired ${parseInt(diff / 60000)} minutes ago`);\n    localStorage.removeItem('token');\n    return {\n      name: null,\n      canPost: false,\n      canPatch: false,\n      canDelete: false,\n    }\n  }\n\n  const isValidToken = () => {\n    const encodedJwt = localStorage.getItem(\"token\");\n    if (encodedJwt) {\n      const decodedJwt = jwtDecode(encodedJwt);\n      const diff = Date.now() - (decodedJwt['exp'] * 1000);\n      if (diff < 0) {\n        console.log(`token expires in ${parseInt((diff * -1) / 60000)} minutes`);\n        return true;\n      } else {\n        console.log(`token expired ${parseInt(diff / 60000)} minutes ago`);\n        handleLogout();\n      }\n    }\n    return false;\n  }\n\n  const getAllMedalsTotal = () => {\n    let sum = 0;\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name].page_value, 0); });\n    return sum;\n  }\n\n  return (\n    <Router>\n      <div className='appHeading'>\n        Olympic Medals\n        <span className='badge'>\n          { getAllMedalsTotal() }\n        </span>\n        {user.name ? \n          <span className='logout'><a href=\"/\" onClick={handleLogout} className='logoutLink'>Logout</a> [{user.name}]</span>\n          :\n          <Link to=\"/login\" className='loginLink'>Login</Link>\n        }\n      </div>\n      <Route exact path=\"/login\">\n        <Login onLogin={handleLogin} />\n      </Route>\n      <div className='countries'>\n          { countries.map(country => \n            <Country \n              key={ country.id } \n              country={ country } \n              medals={ medals.current }\n              canDelete={ user.canDelete }\n              canPatch={ user.canPatch }\n              onDelete={ handleDelete }\n              onSave={ handleSave }\n              onReset={ handleReset }\n              onIncrement={ handleIncrement } \n              onDecrement={ handleDecrement } />\n          )}\n      </div>\n      { user.canPost && <NewCountry onAdd={ handleAdd } /> }\n    </Router>\n  );\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}